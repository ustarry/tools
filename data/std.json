{
    "code": 200,
    "modules": [
        {
            "module": "Standard Basic Module",
            "short": "基础",
            "author": "心鼠探索者",
            "version": "0.0.1",
            "type": "config",
            "config": [
                {
                    "intro": "控制台打印",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "控制台打印$arg:any",
                    "release_target": "print($arg)"
                },
                {
                    "intro": "聊天框显示",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "聊天框显示$arg:any",
                    "release_target": "Chat:sendSystemMsg($arg)"
                },
                {
                    "intro": "控制台打印",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "控制台打印$arg:any",
                    "release_target": "print($arg)"
                },
                {
                    "intro": "变量赋值",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "给$var:any赋值$val:any",
                    "release_target": "$var = $val"
                },
                {
                    "intro": "初始化临时变量",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "初始化临时变量$var:any值为$val:any",
                    "release_target": "local $var = $val"
                },
                {
                    "intro": "获得变量类型",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "any",
                    "template": "获得$arg:any的类型",
                    "release_target": "type($arg)"
                },
                {
                    "intro": "转字符串",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "string",
                    "template": "转$arg:any为字符串",
                    "release_target": "tostring($arg)"
                },
                {
                    "intro": "转数值",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "number",
                    "template": "转为$arg:any为数值",
                    "release_target": "tonumber($arg)"
                },
                {
                    "intro": "转布尔",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "number",
                    "template": "转为$arg:any为数值",
                    "release_target": "tonumber($arg)"
                },
                {
                    "intro": "注册事件监听器",
                    "help": "",
                    "type": "CONTROL",
                    "return": "void",
                    "template": "注册事件$event:string的监听器,以$ev:string接收事件参数 $:block",
                    "release_target": "ScriptSupportEvent:registerEvent($event, function($ev) $blockend)"
                },
                {
                    "intro": "如果逻辑(if)",
                    "help": "",
                    "type": "CONTROL",
                    "return": "void",
                    "template": "如果$condi:bool $:block",
                    "release_target": "if ($condi) then $blockend",
                    "release_target_union": "if ($condi) then $block"
                },
                {
                    "intro": "否则逻辑(else)",
                    "help": "",
                    "type": "CONTROL",
                    "return": "void",
                    "meet_prev": ["如果逻辑(if)", "或者逻辑(elseif)"],
                    "template": "否则 $:block",
                    "release_target": "else $blockend"
                },
                {
                    "intro": "或者逻辑(elseif)",
                    "help": "",
                    "type": "CONTROL",
                    "return": "void",
                    "meet_prev": ["如果逻辑(if)", "或者逻辑(elseif)"],
                    "template": "或者 $condi:bool $:block",
                    "release_target": "elseif ($condi) then $blockend",
                    "release_target_union": "elseif ($condi) then $block"
                },
                {
                    "intro": "循环逻辑(while语句)",
                    "help": "",
                    "type": "CONTROL",
                    "return": "void",
                    "template": "若$condi:bool 一直执行 $:block",
                    "release_target": "while ($condi) do $blockend"
                },
                {
                    "intro": "遍历数组逻辑(for in pairs)",
                    "help": "",
                    "type": "CONTROL",
                    "return": "void",
                    "template": "遍历$array:array的每个下标$key:any 每个元素$value:any $:block",
                    "release_target": "for ($key, $value) in pairs($array) do $blockend"
                },
                {
                    "intro": "遍历table逻辑(for in ipairs)",
                    "help": "",
                    "type": "CONTROL",
                    "return": "void",
                    "template": "遍历$table:table的每个键$key:any 每个值$value:any $:block",
                    "release_target": "for ($key, $value) in ipairs($table) do $block end"
                },
                {
                    "intro": "结束循环",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "结束当前循环",
                    "release_target": "break;"
                }
            ]
        },
        {
            "module": "Standard Basic Block Module",
            "short": "方块",
            "author": "心鼠探索者",
            "version": "0.0.1",
            "type": "config",
            "config": [
                {
                    "intro": "位置处固体?",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "bool",
                    "template": "判断位置$x:int $y:int $z:int是固体",
                    "release_target": "0 == Block:isSolidBlock($x, $y, $z)"
                },
                {
                    "intro": "位置处液体?",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "bool",
                    "template": "判断位置$x:int $y:int $z:int是液体",
                    "release_target": "0 == Block:isLiquidBlock($x, $y, $z)"
                },
                {
                    "intro": "位置处气体?",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "bool",
                    "template": "判断位置$x:int $y:int $z:int是气体",
                    "release_target": "0 == Block:isAirBlock($x, $y, $z)"
                },
                {
                    "intro": "获得指定位置方块id",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "int",
                    "template": "获得指定位置$x:int $y:int $z:int方块id",
                    "release_target": "(function() local _, r = Block:getBlockID($x, $y, $z); return r)()"
                },
                {
                    "intro": "设置方块data",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "设置位置$x:int $y:int $z:int的方块为$id:int,data为$data:int",
                    "release_target": "0 == Block:isAirBlock($x, $y, $z)"
                },
                {
                    "intro": "获得方块data",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "int",
                    "template": "获得位置$x:int $y:int $z:int的方块data",
                    "release_target": "(function() local _, r = Block:getBlockData($x, $y, $z); return r)()"
                },
                {
                    "intro": "放置方块",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "放置方块$id:int在位置$x:int $y:int $z:int朝向$face:int",
                    "release_target": "Block:placeBlock($id, $x, $y, $z, $face)"
                },
                {
                    "intro": "替换方块",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "替换方块$id:int在位置$x:int $y:int $z:int朝向$face:int",
                    "release_target": "Block:replaceBlock($id, $x, $y, $z, $face)"
                },
                {
                    "intro": "设置方块属性",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "设置方块$id:int的属性$attr:int开启状态$status:bool",
                    "release_target": "Block:setBlockSettingAttState($id, $attr, $status)"
                },
                {
                    "intro": "获取方块属性",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "bool",
                    "template": "获取方块$id:int的属性$attr:int",
                    "release_target": "Block:getBlockSettingAttState($id, $attr, $status)"
                },
                {
                    "intro": "获取方块名称",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "string",
                    "template": "获取方块$id:int名称",
                    "release_target": "(function() local _, r = Block:getBlockDefName($id); return r)()"
                },
                {
                    "intro": "获取方块描述",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "string",
                    "template": "获取方块$id:int描述",
                    "release_target": "(function() local _, r = Block:getBlockDefDesc($id); return r)()"
                },
                {
                    "intro": "获取方块外观",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "string",
                    "template": "获取方块$id:int的外观",
                    "release_target": "(function() local _, r = Block:getBlockFacade($id); return r)()"
                }
            ]
        },
        {
            "module": "Standard Basic Item Module",
            "short": "道具",
            "author": "心鼠探索者",
            "version": "0.0.1",
            "type": "config",
            "config": [
                {
                    "intro": "获取道具名称",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "string",
                    "template": "获得道具$id:int的名称",
                    "release_target": "(function() local _, r = Item:getItemName($id); return r)()"
                },
                {
                    "intro": "获取道具描述",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "int",
                    "template": "获取道具$id:int描述",
                    "release_target": "(function() local _, r = Item:getItemDesc($id); return r)()"
                },
                {
                    "intro": "获取actor对应道具id",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "int",
                    "template": "获取$actor:int对应道具id",
                    "release_target": "(function() local _, r = Item:getItemName($actor); return r)()"
                },
                {
                    "intro": "随机道具id",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "int",
                    "template": "随机道具id",
                    "release_target": "(function() local _, r = Item:randomItemID(); return r)()"
                },
                {
                    "intro": "随机投掷物id",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "int",
                    "template": "随机道具id",
                    "release_target": "(function() local _, r = Item:randomProjectileID(); return r)()"
                }
            ]
        },
        {
            "module": "Standard Basic VarLib Module",
            "short": "触发器",
            "author": "心鼠探索者",
            "version": "0.0.1",
            "type": "config",
            "config": [
                {
                    "intro": "获取触发器全局变量",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "any",
                    "template": "获得触发器类型$type:int全局变量$var:string的值",
                    "release_target": "(function() local _, r = VarLib2:getGlobalVarByName($type, $var); return r)()"
                },
                {
                    "intro": "修改触发器全局变量",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "修改触发器类型$type:int全局变量$var:string值为$val",
                    "release_target": "VarLib2:setGlobalVarByName($type, $var, $val)"
                },
                {
                    "intro": "获取触发器私有变量",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "any",
                    "template": "获得触发器类型$type:int $actor:int的私有变量$var:string的值",
                    "release_target": "(function() local _, r = VarLib2:getPlayerVarByName($actor, $type, $var); return r)()"
                },
                {
                    "intro": "修改触发器私有变量",
                    "help": "",
                    "type": "STATEMENT",
                    "return": "void",
                    "template": "修改触发器类型$type:int $actor:int的私有变量$var:string值为$val",
                    "release_target": "VarLib2:setPlayerVarByName($actor, $type, $var)"
                }
            ]
        }
    ]
}